# -*- coding: utf-8 -*-
"""Experiment_5_STRING_MANIPULATION.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1fH-59pHxIv6N4HtelQiETemCjZOuXtk1

Username Validator  You're developing a login system. A username must only contain alphabets
and numbers, and should not exceed 12 characters.
Write a function that checks whether a given username is valid or not. Return True if it's valid,
otherwise False.
"""

def val_usr():
    usr = input("Enter username (max 12 chars, letters and numbers only): ")
    if len(usr) > 12:
        print("Username too long, max 12 chars.")
        return False
    if not usr.isalnum():
        print("Invalid input! Only letters and numbers.")
        return False
    print("Username is valid!")
    return True

val_usr()

"""Email Masking for Privacy . You need to mask part of an email address when displaying it
publicly to protect user privacy.
Write a program that takes an email like john.doe@example.com and returns a masked version
like jo****@example.com.
"""

def mask_email():
    email = input("Enter email: ")
    if '@' not in email:
        print("Invalid email!")
        return
    local, domain = email.split('@')
    masked = local[:2] + '*' * (len(local) - 2) + '@' + domain
    print(f"Masked email: {masked}")

mask_email()

"""Detecting Palindromes  You are building a text analyzer app. One of the features is to detect if a
word or phrase is a palindrome (ignoring spaces and punctuation).
Write a function that checks whether a given string is a palindrome, ignoring case, spaces, and
punctuation.
"""

import string

def chk_pal():
    txt = input("Enter text: ")
    txt = txt.lower()
    txt = txt.replace(" ", "")
    txt = txt.translate(str.maketrans("", "", string.punctuation))

    if txt == txt[::-1]:
        print("Yes, it's a palindrome!")
    else:
        print("No, it's not a palindrome.")

chk_pal()

"""Text Formatter for News Headlines - Youâ€™re building a news app that receives article titles in
random casing. You need to format the titles so each word starts with a capital letter.
Write a function that converts a given string like "breaKing news: python is fun" to "Breaking
News: Python Is Fun".
"""

def format_head():
    head = input("Enter headline: ")
    print(f"Formatted: {head.title()}")

format_head()

"""Word Frequency Counter  In a blog analysis tool, you need to find out how often each word
appears in a paragraph.
"""

def word_freq():
    text = input("Enter text: ")
    words = text.lower().split()
    freq = {}

    for w in words:
        freq[w] = freq.get(w, 0) + 1

    print("Word count:", freq)

word_freq()

"""Write a program that takes a block of text and prints"""

def count_words():
    text = input("Enter text: ")
    words = text.split()
    word_count = {}

    for w in words:
        w = w.lower()
        word_count[w] = word_count.get(w, 0) + 1

    print("Word Frequency:")
    for w, c in word_count.items():
        print(f"{w}: {c}")

count_words()