# -*- coding: utf-8 -*-
"""Experiment2_ControlStatements.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1F0KJQxCXxwpO5EvxOZ-QCTXgzIxjwgq3

Develop a python program for finding the absolute value of a given number. This is always measured as positive number. This number is the distance of given number from the 0(Zero). The input value may be integer, float or complex number in Python. The absolute value of given number may be integer or float.
"""

def absolute_value(num):
    if isinstance(num, complex):
        return abs(num)
    elif num >= 0:
        return num
    else:
        return -num

n = eval(input("Enter a number (integer, float, or complex): "))
result = absolute_value(n)

print("The absolute value is:", result)

"""Calculate the Total selling price after levying the GST (Goods and Service Tax) as CGST and SGST on sale. CGST (Central Govt. GST), SGST (State Govt. GST) .
        Sale amount    		CGST Rate   		SGST Rate
         0-50000	  	5%	  		5%
         Above 50000  		18%		  	18%
"""

def total_selling_price(sale_amount):
    if sale_amount <= 50000:
        cgst = sgst = 5
    else:
        cgst = sgst = 18
    total_tax = sale_amount * (cgst + sgst) / 100
    return sale_amount + total_tax

amount = float(input("Enter the sale amount: "))

final_price = total_selling_price(amount)

print("Total selling price after GST is â‚¹", final_price)

"""Write a Python program to construct the following pattern, using a nested for loop.
*
* *
* * *
* * * *
* * * * *
* * * *
* * *
* *
*

"""

rows = 5

for i in range(1, 10):
    if i <= rows:
        for j in range(i):
            print("*", end=" ")
    else:
        for j in range(2 * rows - i):
            print("*", end=" ")
    print()

"""Write a Python program to guess a number between 1 and 9.
Note : User is prompted to enter a guess. If the user guesses wrong then the prompt appears again until the guess is correct, on successful guess, user will get a "Well guessed!" message, and the program will exit.

"""

import random

number_to_guess = random.randint(1, 9)
guess = 0

while guess != number_to_guess:
    guess = int(input("Guess a number between 1 and 9: "))

print("Well guessed!")

"""You have two streaming subscriptions and want to find out how much you spend each month and how much you could save if you switch to paying annually. Each subscription has a monthly cost and offers a discounted annual rate."""

s1_m = float(input("Enter monthly cost for Subscription 1: "))
s2_m = float(input("Enter monthly cost for Subscription 2: "))

s1_a = float(input("Enter discounted annual cost for Subscription 1: "))
s2_a = float(input("Enter discounted annual cost for Subscription 2: "))

m_total = s1_m + s2_m
y_normal = m_total * 12
y_discount = s1_a + s2_a
saving = y_normal - y_discount

print("\n--- Subscription Cost Summary ---")
print("Monthly Total: ", round(m_total, 2))
print("Total Annual Cost without Discount: ", round(y_normal, 2))
print("Total Annual Discounted Cost: ", round(y_discount, 2))
print("Total Savings: ", round(saving, 2))

"""Write a Python program to calculate the total monthly cost for both subscriptions, the total annual cost if you continue paying monthly, and compare this with the annual rates you would pay if you switch to annual payments. Finally, show how much you could save by choosing the annual payment option.
       Test Case:
Input:
Service 1 = $10/month
Service 2 = $12/month
Annual Discount for Service 1 = $100
Annual Discount for Service 2 = $120
Expected Output:
Monthly Total: $22.00
Total Annual Cost without Discount: $264.00
Total Annual Discounted Cost: $220.00
Total Savings: $44.00

"""

def calc_sub(s1_m, s2_m, s1_a, s2_a):
    m_total = s1_m + s2_m
    y_normal = m_total * 12
    y_discount = s1_a + s2_a
    saving = y_normal - y_discount
    return m_total, y_normal, y_discount, saving

s1_m = float(input("Enter monthly cost for Service 1: "))
s2_m = float(input("Enter monthly cost for Service 2: "))

s1_a = float(input("Enter discounted annual cost for Service 1: "))
s2_a = float(input("Enter discounted annual cost for Service 2: "))

m_total, y_normal, y_discount, saving = calc_sub(s1_m, s2_m, s1_a, s2_a)

print("\n--- Subscription Cost Summary ---")
print("Monthly Total: ", round(m_total, 2))
print("Total Annual Cost without Discount: ", round(y_normal, 2))
print("Total Annual Discounted Cost: ", round(y_discount, 2))
print("Total Savings: ", round(saving, 2))

"""Write a Python program that iterates through integers from 1 to 50. For each multiple of three, print "Fizz" instead of the number; for each multiple of five, print "Buzz". For numbers that are multiples of both three and five, print "FizzBuzz"."""

for i in range(1, 51):
    if i % 3 == 0 and i % 5 == 0:
        print("FizzBuzz")
    elif i % 3 == 0:
        print("Fizz")
    elif i % 5 == 0:
        print("Buzz")
    else:
        print(i)

"""Write a Python program that takes two digits m (row) and n (column) as input and generates a two-dimensional array. The element value in the i-th row and j-th column of the array should be i*j.
Note :
i = 0,1.., m-1
j = 0,1, n-1.
Test Data : Rows = 3, Columns = 4
Expected Result : [[0, 0, 0, 0], [0, 1, 2, 3], [0, 2, 4, 6]]
"""

def generate_array(m, n):
    array = []
    for i in range(m):
        row = []
        for j in range(n):
            row.append(i * j)
        array.append(row)
    return array

rows = int(input("Enter number of rows: "))
cols = int(input("Enter number of columns: "))

matrix = generate_array(rows, cols)

print(matrix)

"""Write  a Python program for Grade Classification
Scenario: A school system classifies grades as follows:
A (90 and above)
B (70 to 89)
C (50 to 69)
D (below 50)
Question:  What grade will be assigned to a student who scores 85?
If the score is 92, what grade will the program output

"""

def classify_grade(score):
    if score >= 90:
        return "A"
    elif score >= 70:
        return "B"
    elif score >= 50:
        return "C"
    else:
        return "D"

marks = int(input("Enter student's score: "))

grade = classify_grade(marks)

print("The grade is:", grade)

"""Write a program that prints the multiplication table of a user-entered number up to 10."""

num = int(input("Enter a number: "))

for i in range(1, 11):
    print(num, "x", i, "=", num * i)

"""Write a Python program to check the validity of passwords input by users.
Validation :
At least 1 letter between [a-z] and 1 letter between [A-Z].
At least 1 number between [0-9].
At least 1 character from [$#@].
Minimum length 6 characters.
Maximum length 16 characters.

"""

import re

def is_valid(password):
    if len(password) < 6 or len(password) > 16:
        return False
    if not re.search("[a-z]", password):
        return False
    if not re.search("[A-Z]", password):
        return False
    if not re.search("[0-9]", password):
        return False
    if not re.search("[$#@]", password):
        return False
    return True

pwd = input("Enter the password: ")

if is_valid(pwd):
    print("Password is valid!")
else:
    print("Password is invalid!")